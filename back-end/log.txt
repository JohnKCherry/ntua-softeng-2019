29/12/2018 - kef
Creating folders for Database and API (Java+gradle).
Importing demo API provided in softeng course repository. API development will be done on top of the demo.

Έπιασα το API και υλοποίησα τα κομμάτια που λείπανε από το demo για το {baseURL}/products (GET)
τώρα υποστηρίζει (θέλω να πιστεύω) πλήρως τις παραμέτρους που ζητάει το API
Επίσης (ΣΗΜΑΝΤΙΚΟ) άλλαξα τη δομή του product.java (φάκελος  model) για να υποστηρίζει τη μορφή που 
πρέπει να παρουσιαστούν τα δεδομένα σε json
Συγκεκριμένα: στο API θέλει τα tags να γυρνάνε ως λίστα από strings, και όχι σαν ένα μεγάλο string
οπότε άλλαξα τον τύπο της αντίστοιχης μεταβλητής
(Στη βάση έχουμε τύπο mediumtext για τα tags, και αυτό καλύτερα να μην αλλάξει)
------------------------------------------------------------------------------------------------------------------------

30/12/2018 - kef
Ολοκλήρωσα το {baseURL}/products (POST). Ουσιαστικά έγραψα ένα regular expression και πέρασα ελέγχους ώστε τα πεδία που εισάγει
ο χρήστης να μην έχουν "περίεργους" χαρακτήρες. Ένα test page για τη δοκιμή αυτής της λειτουργίας προστέθηκε στον φάκελο
με τις δοκιμαστικές σελίδες.

Έφτιαξα και τα put, patch. ΠΡΟΣΟΧΗ: οι προδιαγραφές δεν λαμβάνουν υπόψην το πεδίο status κατά τα post, put και patch. 
Επειδή θα ήταν πολύ χαζό να μην υπάρχει στα τελευταία δύο (χωρίς αυτό όλα τα προϊόντα που έγιναν withdrawn δεν 
θα είχαν τρόπο να ξαναγίνουν active ποτέ) άλλαξα τον κώδικα και το έκανα προαιρετικό.

Έτοιμο και το delete για τα products :)
Στο αρχείο api/ProductResource.java, στη συνάρτηση delete θα βρείτε μια μεταβλητή admin που ρυθμίζει (προσωρινά) τα δικαιώματα
για τη λειτουργία της διαγραφής. Όταν υλοποιηθεί το functionality του login, θα αλλάξει αυτό το σημείο.

Προσέθεσα ελέγχους στα δύο (μέχρι τώρα) ερωτήματα GET που υποστηρίζονται, ώστε να λαμβάνουν υπόψην τη παράμετρο format.
------------------------------------------------------------------------------------------------------------------------

31/12/2018 - kef
Πέρασα τις κλάσεις που μοντελοποιούν τα shops ως οντότητες, καθώς και τον μετασχηματισμό τους σε json.
Ολοκλήρωσα το {baseURL}/shops (GET). Διόρθωσα επίσης μερικά μικρά bugs σχετικά με τα μηνύματα που 
πρέπει να επισρτέφει ο server αν κάτι πάει στραβά.

Έτοιμο και το POST για τα products. Συνειδητοποιώ ότι μέχρι τώρα το API δεν υποστηρίζει καθόλου τα ελληνικά 
(δεν περνάνε από τα regular expressions που έχω γράψει). Θα πρέπει να γίνει ένα μικρό circle back για να μπούνε και αυτά.

UPDATE: αν απενεργοποιηθεί ο έλεγχος χαρακτήρων με το regular expression, τα ελληνικά παίζουν κανονικά. Προσωρινά κρατάω τον 
έλεγχο, και όταν ελύσω το πρόβλημα με κάποιο καλύτερο regex θα μπουν και τα ελληνικά. 

Επίσης, διορθώθηκε το μήνυμα σφάλματος που επιστρέφεται όταν επιχειρήσει κάποιος να δώσει δύο φορές POST 
για ένα αντικείμενο (product ή shop).

Έτοιμο και το {baseURL}/shops/{id} GET functionality.
------------------------------------------------------------------------------------------------------------------------

01/01/2019 - kef
Καλή χρονιά!
Ολοκλήρωσα τα put & patch για το {baseURL}/shops/{id}.
Επίσης, πέρασα κι άλλα patches για bugs σχετικά με exception handling όταν η εισαγωγή ή η ενημέρωση ενός αντικειμένου 
προκαλεί conflict με κάποιο άλλο αντικείμενο (π.χ. δύο προϊόντα έχουν το ίδιο όνομα, ή δύο καταστήματα την ίδια διεύθυνση).

Έτοιμο και το delete για τα shops. Θυμήζω ότι μια λογική μεταβλητή (που είναι σταθερά ορισμένη ως false by default) ορίζει 
τη δικαιοδοσια για το αν πρέπει να γίνει withdrawal ή delete.

------------------------------------------------------------------------------------------------------------------------

02/01/2019 - kef
Έγραψα τις απαραίτητες κλάσεις για να υποστηρίξει το API τις τιμές, και υλοποίησα τη λειτουργικότητα για το {baseURL}/prices 
POST. Ανέβασα σχετικό test page. Επίσης, διόρθωσα μερικά bugs στα GET των shops και των products
(δεν επέστρεφαν σωστά τα αποτελέσματα βάσει των πραμέτρων start και count).

Επίσης, έφτιαξα ένα δοκιαστικό url (http://localhost:8765/app/observatory/api/productswithimage/2) που επιστρέφει μαζί με το
προϊόν και την εικόνα του. Ενημερώνω και το sql αρχείο της βάσης με τον πίνακα για τις εικόνες (είναι ξεχωριστός από τα 
products). Επειδή δεν είναι δεσμευτικό κάθε product να έχει εικόνα, θα πρέπει να συζητήσουμε με ποιον τρόπο θα μπαίνει 
μια default εικόνα όπου δεν βάζει κάτι ο χρήστης, ή αν προτιμάμε να μένει κενό το αντίστοιχο πεδίο και να βάζει μια 
dummy εικόνα το front end στα σημεία που λείπει η πραγματική φωτό.
------------------------------------------------------------------------------------------------------------------------

04/01/2019 - kef
Bug fix για το cross-origin disabled access. Ουσιαστικά έφτιαξα ένα filter που υποδεικνύει στο restlet να επιτρέπει
όλες τι προσβάσεις (ενεργοποιώντας τα κατάλληλα header) στο restlet.

------------------------------------------------------------------------------------------------------------------------

07/01/2019 - kef
Άλλαξα τη βαση. Έσβησα τον πίνακα images και πρόσθεσα column: image στον πίνακα products. Ενημέρωσα τον κώδικα του API 
για να επιστρέφει σωστά δεδομένα βάσει αυτής της αλλαγής.

------------------------------------------------------------------------------------------------------------------------
08/01/2019 - raf
έφτιαξα το get functionality για τα prices, και διορθώθηκαν μερικά bugs στο api (όπως στα products).
